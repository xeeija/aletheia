name: build

on:
  push:
    paths:
      - "server/**"
      - "web/**"
      - "!README.md"
    branches:
      - "**"

jobs:
  build-web:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "./web"

    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup NodeJS 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "./web/package-lock.json"

      - name: Install packages
        run: npm ci

      - name: Run Lint
        id: lint
        run: npm run lint:ci
        # Run eslint 2x for JSON format and human-readable report as artifact
        # run: |
        #   npm run lint -- --output-file eslint_report.json --format json . & \
        #   npm run lint -- --output-file eslint_report.txt --format compact .

      - name: Run Prettier
        id: prettier
        run: npm run format:check .
        # run: npx prettier --check --no-color . 2> prettier_report.txt
        if: success() || steps.lint.outcome == 'failure'

      # - name: Upload Prettier report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: prettier_report.txt
      #     path: ./web/prettier_report.txt
      #   if: steps.prettier.outcome == 'failure'

      # TODO: Run tests (in another stage?)
      # - name: Run tests
      #   run: npm test

      - name: Annotate Lint results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          report-json: ./web/eslint_report.json
        # Continue to the next step even if this fails
        continue-on-error: true
        # Run this, even if the previous step fails
        if: always()

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint_report.txt
          path: ./web/eslint_report.txt
          # if-no-files-found: ignore
        if: always()

      # Run tests

  build-server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "./server"

    permissions:
      contents: read
      checks: write

    env:
      # NODE_ENV: production
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: aletheia
      POSTGRES_USER: aletheia
      POSTGRES_PASSWORD: aletheia
      DATABASE_URL: postgresql://aletheia:aletheia@localhost:5432/aletheia

    # additional postgres service (container) on the runner
    # services:
    #   postgres:
    #     image: postgres:14.8
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_DB: ${{ env.POSTGRES_DB }}
    #       POSTGRES_USER: ${{ env.POSTGRES_USER }}
    #       POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup NodeJS 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "./server/package-lock.json"

      - name: Install packages
        run: npm ci

      - name: Run Lint
        id: lint
        run: npm run lint:ci
        # run: |
        #   echo "node_modules/.bin:$PATH" > $GITHUB_PATH
        #   npm run lint:ci

        # Run eslint 2x for JSON format and human-readable report as artifact
        # run: |
        #   npm run lint -- --output-file eslint_report.json --format json . & \
        #   npm run lint -- --output-file eslint_report.txt --format compact .

      - name: Run Prettier
        id: prettier
        run: npm run format:check .
        # run: npx prettier --check --no-color . 2> prettier_report.txt
        if: success() || steps.lint.outcome == 'failure'

      - name: Build
        run: npm run build

      # - name: Apply migrations
      #   run: npx prisma migrate deploy

      # TODO: Run tests
      # also comment in the migrations step

      - name: Annotate Lint results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          report-json: ./server/eslint_report.json
        # Continue to the next step even if this fails
        continue-on-error: true
        # Run this, even if the previous step fails
        if: always()

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint_report.txt
          path: ./server/eslint_report.txt
        if: always()
